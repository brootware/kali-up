---
# This playbook contains plays to grab RE frameworks/packages
- name: Include vars of re_vars.yml file.
  include_vars:
    file: re_vars.yml

- name: Creating RE directory in {{ re_dir }}
  file:
    path: "{{ re_dir }}"
    state: directory
    owner: "{{ user_dir }}"
    mode: "0755"
  become: yes

- name: Downloading RE Frameworks (IDA & Cutter)
  get_url:
    url: "{{ item }}"
    dest: "{{ re_dir }}"
    mode: 755
    owner: "{{ user_dir }}"
  with_items: "{{ re_tool_sources }}"

  become: yes

- name: Update all packages to latest version
  apt:
    update_cache: yes
    cache_valid_time: 86400
  become: yes

- name: Running IDA Installer
  command: '{{ re_dir }}{{ ida_installer }} --mode unattended --prefix /opt/idafree --installpassword "" '
  become: yes

- name: Removing IDA Installer
  file:
    path: "{{ re_dir }}{{ ida_installer }}"
    state: absent
  become: yes

- name: Add cutter alias to .zshrc
  lineinfile:
    path: ~/.zshrc
    line: "{{ item }}"
  with_items:
    - "# Additional alias from kali-up RE-frameworks role"
    - "alias cutter={{ re_dir }}{{ cutter_binary }}"

- name: Python pip debug message
  debug:
    msg: "By default, pip uses the pip version for the Ansible Python interpreter. For example, pip3 on python 3, and pip2 or pip on python 2."

- name: PwnTools dependencies
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ pwntool_dependencies }}"
  become: yes

- name: Installing Python bindings for capstone/unicorn/keystone/ropper/pwntools
  pip:
    name: "{{ item }}"
  with_items: "{{ python_bindings }}"
  become: yes

- name: Downloading GEF (GDB Enhanced Features) from GitHub
  get_url:
    url: https://github.com/hugsy/gef/raw/master/scripts/gef.sh
    dest: /tmp/gef.sh
  become: no

- name: Installing GEF from /tmp/gef.sh. (Might fail if you're executing via Vagrant. You can ignore the errors here.)
  script:
    cmd: /tmp/gef.sh
  become: no
  register: gef_result
  ignore_errors: true

- name: Installing GEF from /tmp/gef.sh.
  command:
    cmd: sh /tmp/gef.sh
  become: no
  remote_user: vagrant
  when: gef_result is failed

- name: Installing JDK 11+ for Ghidra
  package:
    name: openjdk-11-jdk-headless
    state: latest
  become: yes

- name: Install ghidra
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ re_tools }}"
  become: yes

- name: Download pwndbg plugin for gdb
  get_url:
    url: https://raw.githubusercontent.com/pwndbg/pwndbg/dev/setup.sh
    dest: /tmp/setup.sh
  become: no

- name: Installing pwndbg from /tmp/setup.sh. (Might fail if you're executing via Vagrant. You can ignore the errors here.)
  script:
    cmd: /tmp/gef.sh
  become: no
  register: pwndbg_result
  ignore_errors: true

- name: Installing pwndbg from /tmp/setup.sh.
  command:
    cmd: sh /tmp/gef.sh
  become: no
  remote_user: vagrant
  when: pwndbg_result is failed
